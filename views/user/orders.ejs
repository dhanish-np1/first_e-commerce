<!-- breadcrumb -->
<div class="container">
  <div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
    <a href="/profile" class="stext-109 cl8 hov-cl1 trans-04">
      profile
      <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
    </a>

    <span class="stext-109 cl4"> orders </span>
  </div>
</div>

<div style="padding-bottom: 25px; padding-top: 25px">
  <% if (orders.length!==0) { %>
    <div class="container listOrders">
      <% for (let i=0; i < orders.length; i++) { %>
        <div class="orders">
          <% for (let j=0; j < orders[i].products.length; j++) { %>
            <div class="imgdiv">
              <img src="/products/images/<%=orders[i].products[j].image %>" alt="" class="orderimg" />
              <div style="width: 100px">
                <p style="color: black">
                  <%=orders[i].products[j].product_name%>
                </p>
              </div>
              <div>
                <p style="color: black">
                  date <br />
                  <%=new Date(orders[i].deliveryDate).toLocaleDateString()%>
                </p>
              </div>
              <div>
                <p style="color: black">
                  price <br />
                  <%=orders[i].products[j].price%>
                </p>
              </div>
              <div>
                <p style="color: black">
                  quantity <br />
                  &nbsp; &nbsp;<%=orders[i].products[j].quantity%>
                </p>
              </div>
              <div>
                <p style="color: black">
                  total <br />
                  <%=orders[i].products[j].price * orders[i].products[j].quantity %>
                </p>
              </div>
              <div>
                <p style="color: black">
                  Status <br />
                  <%=orders[i].status%>
                </p>
              </div>
              <div></div>
            </div>
            <hr style="border: none; border-top: 1px solid #000" />
            <% } %>
              <div style="display: flex; gap: 10px">
                <!-- <button type="button" class="btn btn-primary">view details</button> -->
                <% if (orders[i].status=='placed' && orders[i].paymentMethod=='COD') { %>
                  <button type="button" class="btn btn-danger" onclick="cancelOrders('<%=orders[i]._id%>')">
                    Cancel order
                  </button>
                  <% } %>
                    <% if (orders[i].status=='delivered' ) { %>
                      <button type="button" class="btn btn-primary" data-toggle="modal"
                        data-target="#cancel<%=orders[i]._id%>">
                        return product
                      </button>

                      <!-- modal -->
                      <div class="modal fade" id="cancel<%=orders[i]._id%>" tabindex="-1" role="dialog"
                        aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                          <div class="modal-content" style="
                background-color: rgb(151, 150, 150);
                border: solid 1px;
                color: black;
              ">
                            <div class="modal-header">
                              <h5 class="modal-title" id="exampleModalLongTitle">
                                product return
                              </h5>
                              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            <div class="modal-body">
                              <form action="" id="return<%=orders[i]._id%>">
                                <input type="text" hidden name="ordId" value="<%=orders[i]._id%>">
                                <textarea style="border: 1px solid black; border: 10px; height: 60px; width: 100%;"
                                  id="feedback" name="reason" placeholder="Enter your feedback here"
                                  required></textarea>
                              </form>

                            </div>
                            <p style="color: red;" id="error-message"></p>
                            <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-dismiss="modal">
                                Close
                              </button>
                              <button type="button" class="btn btn-primary"
                                onclick="returnOrders('<%=orders[i]._id%>')">return</button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <% } %>

                        <!-- view order detail button -->
                        <a href="/orderDetail?id=<%=orders[i]._id%>"><button type="button" class="btn btn-primary">view
                            order</button></a>


                        <!-- showing total amount   -->
                        <p style="color: black; font-size: 20px">
                          Total : <%=orders[i].totalAmount%>
                        </p>
              </div>
        </div>
        <% } %>
    </div>
    <% } else { %>

      <div style="
      height: 300px;
      display: flex;
      justify-content: center;
      align-items: center;
      color: black;
      flex-direction: column;
      gap: 10px;
    ">
        <h1>Order history is empty</h1>
        <a href="profile"><button type="button" class="btn btn-primary">Go back</button></a>
      </div>
      <% } %>
</div>

<script>
  function cancelOrders(id) {
    Swal.fire({
      title: "Are You Sure?",
      // text: "Enter the reason for cancel the order",
      icon: "warning",
      background: "#edeff2",
      // input: "text",
      inputAttributes: {
        required: "required",
      },
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Cancel order",
      cancelButtonText: "Cancel",
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          // const inputValue = result.value;
          const response = await fetch("/cancelOrders", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              id: id,
              // reason:inputValue,
            }),
          });

          const responseData = await response.json();

          if (responseData.success) {
            await Swal.fire({
              title: "Order Canceled",
              text: "Your order has been successfully canceled. We hope to serve you again soon.",
              icon: "success",
              timer: 1500,
              showConfirmButton: false,
            });
            location.reload();
          }
        } catch (error) {
          console.error("Error:", error);
          // Handle error if needed
        }
      }
    });
  }
</script>

<script>
  function returnOrders(id) {
    const formData = new FormData(document.getElementById(`return${id}`));
    const urlSearchParams = new URLSearchParams(formData);

    fetch("/returnOrders", {
      method: "POST",
      body: urlSearchParams,
      headers: {
        "Content-type": "application/x-www-form-urlencoded; charset=UTF-8",
      },
    })
      .then((response) => {
        if (!response.ok) {
          console.log(response.status)
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then((data) => {
        if (data.success) {
          location.reload();
        } else {
          document.getElementById("error-message").innerHTML = data.message;
        }
      })

      .catch((error) => {
        console.log(error)
      });
  }
</script>